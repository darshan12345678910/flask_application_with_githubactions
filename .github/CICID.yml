name: CI/CD Pipeline for dockerized Flask app

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest #container

    steps:
    # Step 1: Check out the repository code
    - name: Check out repository code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run unit tests (create tests if needed)
    - name: Run tests
      run: |
        pytest
    
  build_and_push_docker:
    needs: build_and_test
    runs-on: ubuntu-latest


    steps:
    # Step 1: Check out the repository code
    - name: Check out repository code
      uses: actions/checkout@v3

    # Step 2: Log in to Docker Hub
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    # Step 3: Build Docker image
    - name: Build and publish Docker image
      uses: docker/build-push-action@v4
      with:
        context:
        push: true
        tags: ${{ secrets.Docker_Hub_USERNAME }}//flasktest-app:latest

    - name: Image digest
      run: echo${{ steps.build-and-publish.outputs.digest }}
    
    - name: Build Docker image
      run: docker build -t my-flask-app .

    # Step 4: Tag Docker image
    - name: Tag Docker image
      run: docker tag my-flask-app ${{ secrets.DOCKER_HUB_USERNAME }}/my-flask-app:latest

    # Step 5: Push Docker image to Docker Hub
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-flask-app:latest
